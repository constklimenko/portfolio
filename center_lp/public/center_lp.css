@font-face {
  font-family: "Circe";
  src: url(fonts/Circe-Light.ttf);
  font-weight: normal;
}
@font-face {
  font-family: "Circe";
  src: url(fonts/Circe-Bold.ttf);
  font-weight: bold;
}
*,
*::before,
*::after {
  box-sizing: border-box;
}
html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
@-ms-viewport {
  width: device-width;
}
article,
aside,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}
[tabindex="-1"]:focus {
  outline: 0 !important;
}
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}
p {
  margin-top: 0;
  margin-bottom: 1rem;
}
abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
}
address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}
ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}
ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}
dt {
  font-weight: 700;
}
dd {
  margin-bottom: 0.5rem;
  margin-left: 0;
}
blockquote {
  margin: 0 0 1rem;
}
dfn {
  font-style: italic;
}
b,
strong {
  font-weight: bolder;
}
small {
  font-size: 80%;
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
a {
  color: #1E1C1B;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}
a:hover {
  color: #0056b3;
  text-decoration: underline;
}
a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}
a:not([href]):not([tabindex]):hover,
a:not([href]):not([tabindex]):focus {
  color: inherit;
  text-decoration: none;
}
a:not([href]):not([tabindex]):focus {
  outline: 0;
}
html {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  font-family: "Circe", sans-serif;
  color: #1E1C1B;
}
.button {
  width: 265px;
  height: 50px;
  border-radius: 50px;
  background-color: #FF6600;
  color: white;
  text-align: center;
}
.button:hover {
  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 0px 2px rgba(255, 102, 0, 0.12), 0px 4px 8px rgba(255, 102, 0, 0.18);
}
/* nav */
.logo {
  background: url('img/logo.png') no-repeat center / contain;
  align-self: stretch;
  justify-self: stretch;
}
.nav {
  padding-top: 30px;
  padding-left: 9.5%;
  padding-right: 9.5%;
  padding-bottom: 30px;
  max-width: 1440px;
  margin: auto;
  min-height: 75px;
  box-sizing: border-box;
  position: -webkit-sticky;
  position: sticky;
  display: grid;
  grid-template-columns: 10% repeat(4, minmax(-webkit-max-content, 1fr)) minmax(-webkit-max-content, 40%);
  grid-template-columns: 10% repeat(4, minmax(max-content, 1fr)) minmax(max-content, 40%);
  grid-template-rows: 45px;
  grid-row-gap: 0;
  grid-column-gap: 5px;
  align-content: center;
  align-items: center;
  justify-content: center;
}
@media (max-width: 1024px) {
  .nav {
    padding-top: 20px;
    padding-left: 6.33333333%;
    padding-right: 6.33333333%;
    padding-bottom: 20px;
  }
}
@media (max-width: 560px) {
  .nav {
    padding-top: 15px;
    padding-left: 4.75%;
    padding-right: 4.75%;
    padding-bottom: 15px;
  }
}
@media (max-width: 560px) {
  .nav {
    display: grid;
    grid-template-columns: 67px -webkit-max-content 1fr;
    grid-template-columns: 67px max-content 1fr;
    grid-template-rows: 25px;
    grid-row-gap: 0;
    grid-column-gap: 5%;
  }
}
.nav__link {
  text-align: center;
}
.nav__phone {
  text-align: right;
}
.nav__toggle {
  left: 5%;
  display: grid;
  grid-template-rows: 1fr 1fr 1fr;
  width: 1.4rem;
  height: 1.2rem;
  align-self: center;
  justify-self: center;
  cursor: pointer;
}
.nav__toggle__line {
  height: 50%;
  border-bottom: 2px solid black;
}
.nav__bottom {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(4, 2em);
  grid-row-gap: 20px;
  grid-column-gap: 10px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 20;
  background: white;
  height: 100vh;
  padding-top: 10vh;
}
.nav__cross {
  text-transform: uppercase;
  text-shadow: 0.1em 0.1em 4px black;
  position: absolute;
  top: 30px;
  left: 30px;
  font-family: 'HelveticaNavCyr', sans-serif;
  font-size: 24px;
  font-weight: 600;
  line-height: 1.4em;
  cursor: pointer;
}
/* nav ends */
/* projects  ends*/
@media (min-width: 561px) {
  .m-show {
    display: none;
  }
}
@media (max-width: 560px) {
  .m-hide {
    display: none;
  }
}
@media (max-width: 1024px) {
  .t-hide {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
